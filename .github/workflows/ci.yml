name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ main ]

jobs:
  lint:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install PowerShell
        if: runner.os != 'Windows'
        shell: bash
        run: |
          if ! command -v pwsh >/dev/null 2>&1; then
            if [[ "$RUNNER_OS" == "Linux" ]]; then
              sudo snap install powershell --classic
            elif [[ "$RUNNER_OS" == "macOS" ]]; then
              brew install --cask powershell
            fi
          fi
      - name: Cache PowerShell modules (Windows)
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with:
          path: C:\Users\runneradmin\Documents\PowerShell\Modules
          key: windows-pwsh-modules-${{ hashFiles('.github/actions/lint/requirements.txt') }}
          restore-keys: windows-pwsh-modules-
      - name: Cache PowerShell modules (Posix)
        if: runner.os != 'Windows'
        uses: actions/cache@v4
        with:
          path: ~/.local/share/powershell/Modules
          key: ${{ runner.os }}-pwsh-modules-${{ hashFiles('.github/actions/lint/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pwsh-modules-
      - name: Uninstall PSScriptAnalyzer
        shell: pwsh
        run: |
          if (Get-Module -ListAvailable -Name PSScriptAnalyzer) {            Write-Host "PSScriptAnalyzer module found. Uninstalling..."
            Uninstall-Module -Name PSScriptAnalyzer -AllVersions -Force
          } else {
            Write-Host "PSScriptAnalyzer module not found. Skipping uninstallation."

          }
      - name: Install PSScriptAnalyzer
        shell: pwsh
        run: |
          Install-Module -Name PSScriptAnalyzer -RequiredVersion 1.24.0 -Force -Scope CurrentUser
      - uses: ./.github/actions/lint
      - name: Uninstall PSScriptAnalyzer
        shell: pwsh
        run: |
          if (Get-Module -ListAvailable -Name PSScriptAnalyzer) {
            Remove-Module -Name PSScriptAnalyzer -Force -ErrorAction SilentlyContinue
            Uninstall-Module -Name PSScriptAnalyzer -AllVersions -Force
          }
  pester:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Install PowerShell
        if: runner.os != 'Windows'
        shell: bash
        run: |
          if ! command -v pwsh >/dev/null 2>&1; then
            if [[ "$RUNNER_OS" == "Linux" ]]; then
              sudo snap install powershell --classic
            elif [[ "$RUNNER_OS" == "macOS" ]]; then
              brew install --cask powershell
            fi
          fi

      - name: Cache PowerShell modules (Windows)
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with:
          path: C:\Users\runneradmin\Documents\PowerShell\Modules
          key: windows-pwsh-modules-${{ hashFiles('.github/actions/lint/requirements.txt') }}
          restore-keys: windows-pwsh-modules-
      - name: Cache PowerShell modules (Posix)
        if: runner.os != 'Windows'
        uses: actions/cache@v4
        with:
          path: ~/.local/share/powershell/Modules
          key: ${{ runner.os }}-pwsh-modules-${{ hashFiles('.github/actions/lint/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pwsh-modules-
      
      - name: Install Pester
        shell: pwsh
        run: |
          Install-Module -Name Pester -Force -Scope CurrentUser
      - name: Run Pester
        shell: pwsh
        run: |
          Invoke-Pester -CI -ErrorAction Stop
